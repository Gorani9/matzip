# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Java Spring Boot CI/CD

on:
  push:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
    
    - name: Build with gradlew
      run: |
        chmod +x gradlew \
        ./gradlew clean build
        
    - name: Prepare Deliver
      run: |
        mkdir deploy \
        cp ./build/libs/*.jar ./deploy/ \
        zip -r -qq -j ./matzip-server-build.zip ./deploy

    - name: Deliver to AWS S3
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      run: |
        aws s3 cp \
        --region ap-northeast-2 \
        --acl private \ 
        ./matzip-server-build.zip s3://matzip-server-build/
        

    - name: Deploy
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      run: |
        aws deploy create-deployment \
        --application-name matzip-server \
        --deployment-group-name matzip-server-deploy-group \
        --file-exists-behavior OVERWRITE \
        --s3-location bucket=matzip-server-build,bundleType=zip,key=matzip-server-build.zip \
        --region ap-northeast-2
